#!/bin/bash
## From a new terminal set the env vars to access vault as root
export VAULT_ADDR=http://127.0.0.1:8200
export VAULT_TOKEN=root

## Enable approle authentication and
vault auth enable approle

## Add policy for consent to authenticate and pull secrets
vault policy write app - << EOF
path "secret/data/consent/*" {
  capabilities = [ "read" ]
}
EOF

vault policy write deployment - << EOF
path "auth/approle/role/consent/*" {
  capabilities = [ "read", "update" ]
}
EOF

## Add a role for consent using this policy with a short TTL
vault write auth/approle/role/consent token_policies=app token_ttl=20s

## Add the mocked secrets so consent doesn't crash on startup
PUBLIC_CERT="LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURvekNDQW91Z0F3SUJBZ0lVQ01qelNhOHBuWVZBdVc3YTZRTWFJUDc0Sk40d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1lURUxNQWtHQTFVRUJoTUNSRVV4RHpBTkJnTlZCQWdNQmtKbGNteHBiakVQTUEwR0ExVUVCd3dHUW1WeQpiR2x1TVJVd0V3WURWUVFLREF4SVpXRnNkR2h0WlhSeWFYZ3hHVEFYQmdOVkJBTU1FR2hsWVd4MGFHMWxkSEpwCmVDNWpiMjB3SGhjTk1qQXdOekl6TVRNeU1qVXdXaGNOTWpFd056SXpNVE15TWpVd1dqQmhNUXN3Q1FZRFZRUUcKRXdKRVJURVBNQTBHQTFVRUNBd0dRbVZ5YkdsdU1ROHdEUVlEVlFRSERBWkNaWEpzYVc0eEZUQVRCZ05WQkFvTQpERWhsWVd4MGFHMWxkSEpwZURFWk1CY0dBMVVFQXd3UWFHVmhiSFJvYldWMGNtbDRMbU52YlRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU94c3I3TWhvdlZRbndNRHFPeW5NY1lWMy84OGQ0U0gKZ2JFMWZKTzNmK1VGVU0rZXppc05JaUFFRWlFblZJNVIwSVRwVWs3REtrMHVLK2o4TGFpL2FsUUNxamw2UkIwcAo5eC9ndStVNGtiYlZja2lqUzJsTzhSZ2MvaDVycWdwVTdyUXZIcjQ3RWg1cEhtVjE1M2d6OXE4eFBjZCtnbW9SClhaeFNGY1JZdXZqTzUya254YjB0SGFFVnZKd3dNRGd1Y3lFMnRDN3R0TEx3cnhZcVB3SzQyTXVYcnJ4NDhUU1QKdXY1YUxteTVXNE1qZU9Da21FQ1FYT20remFlWm1DYmthOTFHMlNOM25tdHVyc0FIWWg3UVJNL1IyY1BXVVJoRQpyZ0M0aW81NTlkR0hnZWk3a0U4M3BCWlVzYURHSUZObzMvc2pNa2x5OHpIOGYvTzRYZ3lmZXVVQ0F3RUFBYU5UCk1GRXdIUVlEVlIwT0JCWUVGTjd6cHBIaVBaRk90Y3RXK3ZaeERhMTVrQldmTUI4R0ExVWRJd1FZTUJhQUZON3oKcHBIaVBaRk90Y3RXK3ZaeERhMTVrQldmTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFOOVZwRU9LdFpZM01xYjc3U21DYmxpcUdHaTVQeFhtNWZpcFRnTE9NQzMzUExJZWhFRk11Wm9aCkJaeHFhMlVRVU9XcENBWExielhic1B3UGZVOW5xalFpanF0MFpRSGhYTGxGSENWTjY4cGh0bDZ3UCsxR3BBV3QKZTRZMHJTUFhGYU54Qnk3VjJya0R3eElRM2FUbVhoTE55TS9WUlZTT0ROZUJOVkZCTlg3eXhSK01rVHJjOVJhcgpQZG8wazVCVHg5TllzMDVZOU53RXNuRVl6cXlnd0x0NHk2VUM1NjJHdDlIUC9ndkdCTTdJYWJIR0pFYU0zMGlnCmQ1TVhlYStHaElTbndMT0ozQTNDeFk0ME9JL2JCNExJVERWQnNiWHhqeHhiRzhZb0I5NUxEeUdtZHhyem51OG4KTW1pRmViRDcrMVFJWUJCWE9TdTVGUWc5R3JYYjNCcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ=="

PRIVATE_KEY="LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRHNiSyt6SWFMMVVKOEQKQTZqc3B6SEdGZC8vUEhlRWg0R3hOWHlUdDMvbEJWRFBuczRyRFNJZ0JCSWhKMVNPVWRDRTZWSk93eXBOTGl2bwovQzJvdjJwVUFxbzVla1FkS2ZjZjRMdmxPSkcyMVhKSW8wdHBUdkVZSFA0ZWE2b0tWTzYwTHg2K094SWVhUjVsCmRlZDRNL2F2TVQzSGZvSnFFVjJjVWhYRVdMcjR6dWRwSjhXOUxSMmhGYnljTURBNExuTWhOclF1N2JTeThLOFcKS2o4Q3VOakxsNjY4ZVBFMGs3citXaTVzdVZ1REkzamdwSmhBa0Z6cHZzMm5tWmdtNUd2ZFJ0a2pkNTVyYnE3QQpCMkllMEVUUDBkbkQxbEVZUks0QXVJcU9lZlhSaDRIb3U1QlBONlFXVkxHZ3hpQlRhTi83SXpKSmN2TXgvSC96CnVGNE1uM3JsQWdNQkFBRUNnZ0VCQUlMaytiRzNZYjFuMFdHZDJSeU14S1hpM28wMU1RYVM3MTdwT2Z1ZWtKUi8KaU9vcUJnTVgxbGpiYUI0cTVFbVhTbGNMeHFJTXM1TGZpVGdJeGs2ekMyOVB1bWJ3SmwzdktmN2dNYWNLMXNIZgpFdExjZFpmc09OY2MxaVNKZnk4UkxzZGJmeTNiRG9EL3VmQjZncGl1VEZsYWJkWFJXT3JZaW5kTml2ZVdHSTQvCkRyeUNiVjQxYUFQdUdSTHVHNXpqLzdPNjRYeC9HZ2F0V1dxemZweHdKYk9JQUJqVlh4K0o4Tzk0WFhudkxSeWYKUlNDNFFJVkl1VHlsRWtWUjZ4bVE3YitENmVhRG9wYjFBdkJQNEkybzIrVTlCbXFtZUt5OEtaYVN2WENoR1VWVgpobUYvY1JjNGJmalBHSExXUUtaY2Z1NEQrL2F4UUltT2NPdUR0SEw4THRFQ2dZRUE5MUtUK2JXN25qZVRuVXg1CnlzRnRZRUhiYThSSm5xdGM2TCt5TzI4cklJOTluQjdzdkdHb3NMNjdCclVzakpoY0hzZnFYMGlBVmYwejI2S1oKRGZVdnAyOTVGWG1qZGxObGtMOHg4WExGVWYyb200VDdmZUpaNVVpNkpoMFdsbDR1L2dUSTNWWW5OcFAxZG1kcgo1b1RLVHNJaHRRQUI2ZU5zblhGbUxiZENveXNDZ1lFQTlMZzVQNGxVS05pdjhvdFoxczlKNnNWdVJIK0ZYT2tFCmRybEVWS0UvKzFIOWJpSUNyb25DZTJFNWhaRUZ6VWdiQkdwT2syaTNIRTUweFV5Z3NoTkJMUFdZYWtTTzNVSjAKcjNMNG1UQU43ZGJQcTJqbUpaRkQ1R0tRWWpmRkFjUG1PQWwvbDZLcW41RG1FUFpjOEZBdGVUQXVHQmZET1VPZQpnN0sreVZ4L2tpOENnWUJ0RHdIbmRBYkdqdFZONEtJNEVURk01OTE4MlBKcHdFRFk5V2IvcEZiTkpka0sxZXdvCmFadjhUQzZtbDQrTWM4YnpYODV1czhhN3BFcVF5Rk5iZjBuRE9IbVpTYWtXRFZKVkVLcFNRUHpYMmRYV3RqNDcKMVdzMG11eFMwRExjbmExMUgrRC9FUFY3c0tUbDBGY1pNR2NSY2JOeFlBNTM5MncyeFFGOG1Ub09Qd0tCZ1FDVApDenNDN1c2UFdKeG9YY2t1cE1GaWV4MGx0WVlaN0wzTTVNZWxIbnNHZFI2VmxZUU5BaVBFNVFlZU5TVEtVNEJBClord3M4T2ZONzJxRXZ1VnordFBYd3Y3Qkk4N0FMbFZVc3YyamRsZDRTUEhocWhkWURYQkJBK1NEejhUbHFhTmsKbW5oN1ViZTZSMk9tWDVJNnA4S2JKaE1jVVBMeUxxcEpzaGFuZ1pmNTZ3S0JnSDdZUXFRZEhPaGR5NVdsL0RQSQp0aEdnM3NMRmI0cjFuVldjZXRPV1IrSXNrY2RFbEpPQ0tWNldzSjlDakV2K2JZODMrOXE5cElLd1hyRGp5dFcvCkplRDVtV21yVWxvN3NkcFJBYmlqVWF4NytRdW1DNjhWcStXbjJPS1Z0NCtyYlZsUFBzVWljSkpRL1d4UHROVm0KNUgySmhVYkdpTlN4VW5TNW0rQURjdGRvCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0="

vault kv put secret/consent/rds-credentials username=username password=password
vault kv put secret/consent/firebase service-account-key="the service account credentials"
vault kv put secret/consent/consent-signing-material private-key="$PRIVATE_KEY" public-cert="$PUBLIC_CERT"
vault kv put secret/consent/signing-signing-material private-key="$PRIVATE_KEY" public-cert="$PUBLIC_CERT"
vault kv put secret/consent/signing-encryption encryption-key="AAAAAAAAAAAAAAAAAAAAAA=="

## Create a initial deployment token
vault token create -field token -policy=deployment
